name: Run Python Script

on:
  schedule:
    - cron: '0 17 * * *'  # 每天定时运行（UTC 17:00，北京时间 1:00）
  push:
    branches:
      - main
    paths:
      - 'dist/GH-AC-main.py'
      - '.github/workflows/python-script.yml'
  workflow_dispatch:

jobs:
  run_script:
    if: "!contains(github.event.head_commit.message, '更新了')"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整提交历史

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Python script
        run: |
          echo "程序开始运行..."
          python dist/GH-AC-main.py
          echo "程序执行完毕。"

      - name: Commit each TXT individually
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git

          current_datetime=$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')
          need_push=false

          # 修复文件名中的点号匹配问题
          declare -A file_map=(
            ["GAll.(优选-tls).txt"]="优选-tls"
            ["GAll.(优选-非tls).txt"]="优选-非tls"
            ["GAll.(非优选).txt"]="非优选"
            ["替换_GAll.(优选-tls).txt"]="替换优选-tls"
            ["替换_GAll.(优选-非tls).txt"]="替换优选-非tls"
          )

          for file in "${!file_map[@]}"; do
            if [[ -f "$file" ]]; then
              # 获取文件旧版本内容
              old_hash=$(git rev-parse HEAD:"$file" 2>/dev/null || echo "null")
              new_hash=$(git hash-object "$file")

              # 仅当文件有变更时提交
              if [[ "$old_hash" != "$new_hash" ]]; then
                line_count=$(wc -l < "$file")
                message="更新了 ${file_map[$file]} ${line_count}节点 ($current_datetime)"
                
                git add "$file"
                git commit -m "$message"
                need_push=true
                echo "✅ 已提交 $file 变更"
              else
                echo "🟡 $file 无内容变化"
              fi
            else
              echo "🔴 $file 文件未生成"
            fi
          done

          if $need_push; then
            git pull --rebase origin main
            git push origin main
            echo "🚀 已推送所有变更"
          else
            echo "🟢 没有需要推送的变更"
          fi

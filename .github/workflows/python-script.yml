name: Run Python Script

on:
  schedule:
    - cron: '0 17 * * *'  # 每天定时运行（北京时间 1:00）
  push:
    branches:
      - main
    paths:
      - 'dist/GH-AC-main.py'  # 仅当 Python 脚本更新时运行
      - '.github/workflows/python-script.yml'  # 修改 yml 时触发
  workflow_dispatch:  # 允许手动运行

jobs:
  run_script:
    if: "!contains(github.event.head_commit.message, '更新了')"  # 避免无限循环提交
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Python script
        id: run_script
        run: |
          echo "程序开始运行..."
          python dist/GH-AC-main.py  # 运行混淆后的 Python 脚本
          echo "程序执行完毕。"

      - name: Commit each TXT file separately
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git

          # 定义当前时间（北京时间）
          current_datetime=$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')

          # 逐个检查并提交每个生成或替换的 TXT 文件
          for txt_file in "GAll.(优选-tls).txt" "GAll.(优选-非tls).txt" "GAll.(非优选).txt" "替换_GAll(优选-tls).txt" "替换_GAll(优选-非tls).txt"; do
            if [ -f "$txt_file" ]; then
              # 获取文件的行数
              line_count=$(wc -l < "$txt_file")
              
              # 生成提交信息
              message="更新了 ${line_count} 个节点 (${current_datetime})"
              echo "$message"
              
              # 提交文件
              git add "$txt_file"
              git commit -m "$message" && git push || echo "Nothing to commit for $txt_file"
            else
              echo "$txt_file 文件未生成。"
            fi
          done

name: Run Python Script
on:
  schedule:
    - cron: '0 17 * * *'  # UTC时间17点对应北京时间次日1:00
      timezone: 'Asia/Shanghai'  # 显式设置时区[[4,12]]
  push:
    branches:
      - main
    paths:
      - 'dist/GH-AC-main.py'  # 仅当脚本更新时触发
      - '.github/workflows/python-script.yml'  # 修改工作流时触发
  workflow_dispatch:  # 允许手动运行
jobs:
  run_script:
    if: "!contains(github.event.head_commit.message, '更新了')"  # 阻断自动提交的循环触发[[1,14]]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 确保获取完整提交历史[[17]]

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Python script
        run: |
          echo "程序开始运行..."
          python dist/GH-AC-main.py  # 生成5个TXT到根目录
          echo "程序执行完毕。"

      - name: Commit each TXT separately
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认令牌[[17]]
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:$GH_TOKEN@github.com/${{ github.repository }}

          current_time=$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')  # 北京时间戳[[4]]
          
          # 定义需处理的文件列表
          txt_files=(
            "GAll.(优选-tls).txt"
            "GAll.(优选-非tls).txt"
            "GAll.(非优选).txt"
            "替换_GAll(优选-tls).txt"
            "替换_GAll(优选-非tls).txt"
          )

          # 逐个文件处理
          for file in "${txt_files[@]}"; do
            if [[ -f "$file" ]]; then
              line_count=$(wc -l < "$file" | awk '{print $1}')  # 精确获取行数[[15]]
              commit_msg="更新了 ${line_count} 节点 ($current_time)"

              git add "$file"  # 仅添加当前文件
              git commit -m "$commit_msg"  # 独立提交[[17]]
            else
              echo "⚠️ $file 未生成，跳过提交"
            fi
          done

          # 一次性推送所有提交
          git push origin main

name: Run gall.mjs

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # 每天午夜运行
  workflow_dispatch:      # 支持手动触发

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run gall.mjs
        id: run_gall
        run: |
          echo "Running gall.mjs..."
          node gall.mjs
          echo "Directory and files generated."

      - name: List files in generated folder
        id: list_files
        run: |
          # 确保目录已创建
          GENERATED_DIR="your_generated_folder"
          echo "Listing files in $GENERATED_DIR"
          ls $GENERATED_DIR
          echo "::set-output name=files::$(ls $GENERATED_DIR)"

      - name: Create Gist with folder contents
        run: |
          GENERATED_DIR="your_generated_folder"
          FILES=$(echo "${{ steps.list_files.outputs.files }}" | tr ' ' '\n')

          # 创建一个空的 Gist 数据结构
          GIST_FILES=""
          
          # 遍历文件夹中的所有文件
          for FILE in $FILES; do
            CONTENT=$(cat "$GENERATED_DIR/$FILE")
            GIST_FILES="$GIST_FILES
            \"$FILE\": {
              \"content\": \"$CONTENT\"
            },"
          done
          
          # 去掉最后的逗号
          GIST_FILES=$(echo "$GIST_FILES" | sed '$s/,$//')

          # 推送到 Gist
          curl -X POST -H "Authorization: token ${{ secrets.token }}" -d "{
            \"description\": \"gall.mjs generated content\",
            \"public\": true,
            \"files\": {
              $GIST_FILES
            }
          }" https://api.github.com/gists
